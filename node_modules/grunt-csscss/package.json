{
  "name": "grunt-csscss",
  "version": "0.5.0",
  "description": "Grunt task that executes CSSCSS.",
  "homepage": "https://github.com/peterkeating/grunt-csscss",
  "author": {
    "name": "Peter Keating",
    "url": "http://peterkeating.co.uk/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/peterkeating/grunt-csscss.git"
  },
  "bugs": {
    "url": "https://github.com/peterkeating/grunt-csscss/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/peterkeating/grunt-csscss/blob/master/LICENSE-MIT"
    }
  ],
  "main": "gruntfile.js",
  "engines": {
    "node": "*"
  },
  "readmeFilename": "README.md",
  "scripts": {
    "test": "grunt"
  },
  "dependencies": {
    "glob": "3.2.1"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.4.3"
  },
  "keywords": [
    "gruntplugin",
    "css",
    "csscss",
    "redundancy",
    "analysis"
  ],
  "readme": "# grunt-csscss\r\n\r\n[![Build Status](https://secure.travis-ci.org/peterkeating/grunt-csscss.png?branch=master)](http://travis-ci.org/peterkeating/grunt-csscss)\r\n\r\nGrunt task that runs [CSSCSS](http://zmoazeni.github.io/csscss/), a CSS redundancy analyzer.\r\n\r\n## CSSCSS\r\n\r\nCSSCSS runs on Ruby (`v1.9.x` and up), to check Ruby is installed on your machine use `ruby -v`. To install the CSSCSS gem run `gem install csscss` command, this will grab the latest version.\r\n\r\nCurrently grunt-csscss handles all the features for CSSCSS that are available with version **1.3.1**.\r\n\r\n## Getting Started\r\n\r\nThis plugin requires Grunt `~0.4.0`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-csscss --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-csscss');\r\n```\r\n## Options\r\n\r\n### bundleExec\r\n\r\nType: `Boolean`\r\nDefault: `false`\r\n\r\nRun CSSCSS with [bundle exec](http://gembundler.com/).\r\n\r\n### colorize\r\n\r\nType: `Boolean`\r\nDefault: `true`\r\n\r\nFlag indicating whether the outputted analysis should be colorized.\r\n\r\n### compass\r\n\r\nType: `Boolean`\r\nDefault: `false`\r\n\r\nEnables Compass extensions when parsing Sass.\r\n\r\n*[Compass](http://compass-style.org/) must be installed in order to use this option.*\r\n\r\n### compassConfig - DEPRECATED\r\n\r\nType: `String`\r\n\r\nEnables Compass extension and specifies path to a config file.\r\n\r\n**This option is deprecated, the require option should be used.**\r\n\r\n*[Compass](http://compass-style.org/) must be installed in order to use this option.*\r\n\r\n### failWhenDuplicates\r\n\r\nType: `Boolean`\r\nDefault: `false`\r\n\r\nFlag indicating whether the Grunt task should fail when rule sets with duplicate declarations are found by CSSCSS.\r\n\r\n### ignoreProperties\r\n\r\nType: `String`\r\n\r\nComma seperated list of CSS properties that should be ignored when finding matches.\r\n\r\n### ignoreSassMixins\r\n\r\nType: `Boolean`\r\nDefault: `false`\r\n\r\nFlag indicating whether matches in Sass mixins should be ignored.\r\n\r\n*This is an experimental feature.*\r\n\r\n### ignoreSelectors\r\n\r\nType: `String`\r\n\r\nComma seperated list of selectors that should be ignored when finding matches.\r\n\r\n### minMatch\r\n\r\nType: `Number`\r\nDefault: `3`\r\n\r\nOnly report matches that have at least this many matching rules.\r\n\r\n### outputJson\r\n\r\nType: `Boolean`\r\nDefault: `false`\r\n\r\nOutput analysis in JSON format.\r\n\r\n### shorthand\r\n\r\nType: `Boolean`\r\nDefault: `true`\r\n\r\nWhether shorthand CSS declaration should be parsed. Check [here for a great explanation](https://github.com/zmoazeni/csscss/pull/20) of this option.\r\n\r\n### showParserErrors\r\n\r\nType: `Boolean`\r\nDefault: `false`\r\n\r\nOutputs parser errors.\r\n\r\n### require\r\n\r\nType: `string`\r\n\r\nPath to a ruby file that is loaded before running CSSCSS.\r\n\r\n*[Compass](http://compass-style.org/) must be installed in order to use this option.*\r\n\r\n### verbose\r\n\r\nType: `Boolean`\r\nDefault: `false`\r\n\r\nDisplays the CSS properties that have been matched.\r\n\r\n## Examples\r\n\r\n### Configuration Example\r\n\r\nBasic example of a Grunt config containing the CSSCSS task.\r\n```js\r\ngrunt.initConfig({\r\n  csscss: {\r\n    dist: {\r\n      src: ['css/style.css']\r\n    }\r\n  }\r\n});\r\n\r\ngrunt.loadNpmTasks('grunt-csscss');\r\n\r\ngrunt.registerTask('default', ['csscss']);\r\n```\r\n\r\n### Multiple Files\r\n\r\nRunning CSSCSS against multiple CSS files. All the files specified in the `src` array will be analyzed by CSSCSS.\r\n```js\r\ncsscss: {\r\n  dist: {\r\n    src: ['css/style.css', 'css/another.css']\r\n  }\r\n}\r\n```\r\n\r\n### Specifying Options\r\n\r\nExample of using the [options](https://github.com/peterkeating/grunt-csscss#options).\r\n\r\n```js\r\ncsscss: {\r\n  options: {\r\n    colorize: false,\r\n    verbose: true,\r\n    outputJson: false,\r\n    minMatch: 2,\r\n    compass: true,\r\n    ignoreProperties: 'padding',\r\n    ignoreSelectors: '.rule-a'\r\n  },\r\n  dist: {\r\n    src: ['css/style.css', 'css/another.css']\r\n  }\r\n}\r\n```\r\n\r\n### Analyzing Compass Stylesheet\r\n\r\nExample of using CSSCSS to analyze Sass files that are converted using Compass.\r\n\r\n```js\r\ncsscss: {\r\n  options: {\r\n    require: 'my/config/file.rb'\r\n  },\r\n  dist: {\r\n    src: ['sass/style.scss']\r\n  }\r\n}\r\n```\r\n\r\n### Specifying Files with Glob Pattern\r\n\r\nExample of using a glob pattern to target many files that should be analysed by CSSCSS. The example below will analyse all the files in the `css` directory that have an extension of `.css`.\r\n\r\n```js\r\ncsscss: {\r\n  dist: {\r\n    src: ['css/*.css']\r\n  }\r\n}\r\n```\r\n\r\n## Release History\r\n\r\n### 0.5.0 (June 4th 2013)\r\n\r\n* Specifying which files CSSCSS should analyse now supports glob patterns. ([#7](https://github.com/peterkeating/grunt-csscss/issues/7))\r\n* Fixed typos in the documentation. ([#5](https://github.com/peterkeating/grunt-csscss/issues/5))\r\n* Added `bundleExec` option to run CSSCSS in the context of a bundle. ([#6](https://github.com/peterkeating/grunt-csscss/issues/6))\r\n\r\n### 0.4.0 (April 21st 2013)\r\n\r\n* Added `ignoreSassMixins` option to ignore matches in Sass mixins.\r\n* Added `require` option for loading Ruby file before running CSSCSS.\r\n* Updated the `compassConfig` option to use the `--require` argument instead of the now deprecated `--compass-with-config` argument.\r\n* Deprecated `compassConfig` option.\r\n\r\n### 0.3.1 (April 17th 2013)\r\n\r\n* Fixed bug with grunt task failing when CSSCSS outputs JSON even though duplicates weren't found. ([#3](https://github.com/peterkeating/grunt-csscss/issues/3))\r\n* Performance improvements by moving re-used argument construction outside the file loop.\r\n\r\n### 0.3.0 (April 16th 2013)\r\n\r\n* Added `failWhenDuplicates` option to fail Grunt task when CSSCSS finds rule sets with duplicate declarations. ([#2](https://github.com/peterkeating/grunt-csscss/issues/2))\r\n\r\n### 0.2.0 (April 13th 2013)\r\n\r\n* Added `showParserErrors` option to output parser errors.\r\n* Added `shorthand` option to determined whether shorthand should be parsed.\r\n* Added `compassConfig` option to specify path to Compass config file.\r\n\r\n### 0.1.0 (April 12th 2013)\r\n\r\n* Initial release supporting all options for CSSCSS v1.0.0.\r\n\r\n## Credits\r\n\r\nAll credit goes to [Zach Moazeni](https://github.com/zmoazeni) for his brilliant work on [CSSCSS](https://github.com/zmoazeni/csscss), great job Zach!\r\n",
  "_id": "grunt-csscss@0.5.0",
  "_from": "grunt-csscss@~0.5.0"
}
